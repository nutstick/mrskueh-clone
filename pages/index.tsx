import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useMemo, useRef, useState } from "react";
import Section from "../components/section";
import Sidebar from "../components/sidebar";
import type { Section as ISection, SectionData } from "../interfaces";
import styles from "../styles/Home.module.css";

interface Props {
  data: SectionData[];
}

const Home: NextPage<Props> = ({ data }) => {
  const [activeMenu, setActiveMenu] = useState(undefined);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="max-w-screen-xl flex flex-row relative mx-auto">
        <div className="w-1/4">
          <Sidebar activeMenu={activeMenu} sections={data} />
        </div>
        <div className="w-3/4 flex flex-col">
          {data.map((section) => (
            <Section key={section.id} section={section} />
          ))}
        </div>
      </main>
    </div>
  );
};

export async function getServerSideProps() {
  const res = await fetch(
    `https://atlas-fe-menu.atlas-kitchen.workers.dev/menu`
  );
  const { sections } = (await res.json()) as {
    id: number;
    startDate: string;
    endDate: string;
    sections: ISection[];
  };

  sections.sort((a, b) => a.displayOrder - b.displayOrder);

  const data: SectionData[] = [];
  for (const section of sections) {
    if (section.subSections.length) {
      section.subSections.sort((a, b) => a.displayOrder - b.displayOrder);

      for (const subSection of section.subSections) {
        subSection.items.sort((a, b) => a.displayOrder - b.displayOrder);

        data.push({
          ...subSection,
          id: `${section.id}_${subSection.id}`,
          label: `${section.label} / ${subSection.label}`,
        });
      }
    } else {
      section.items.sort((a, b) => a.displayOrder - b.displayOrder);

      data.push({
        ...section,
        id: `${section.id}`,
      });
    }
  }

  return {
    props: {
      data,
    },
  };
}

export default Home;
